<?php
// ملف الإعدادات
$token = '8020098836:AAGmsrRd2vQQS4ExaoqwBc6W2c8GgHNTMk8';
$admin_id = '7804324760';
$bot_status = 'on'; // حالة البوت (on/off)
$main_admin = '7804324760'; // الأدمن الأساسي (المالك)

// تعريف الثوابت بمسارات مطلقة لضمان الحفظ والقراءة الصحيحة
define("BASE_DIR", __DIR__ . DIRECTORY_SEPARATOR); // المسار المطلق للمجلد الحالي
define("BALANCES_FILE", BASE_DIR . "balances00.json");
define("STEPS_DIR", BASE_DIR . "s088teps" . DIRECTORY_SEPARATOR);
define("PRICES_FILE", BASE_DIR . "p880rices.json");
define("CASH_FILE", BASE_DIR . "c880cash.txt");
define("USERS_FILE", BASE_DIR . "u0sers.json");
define("BANNED_FILE", BASE_DIR . "b880anned.json");
define("ADMINS_FILE", BASE_DIR . "a88dmins.json");
define("FORCED_CHANNELS_FILE", BASE_DIR . "f88orced_channels.json");


/**
 * دالة آمنة لتهيئة الملفات والتأكد من صحة محتوى JSON.
 * @param string $file مسار الملف.
 * @param mixed $default القيمة الافتراضية إذا لم يكن الملف موجودًا أو كان تالفًا.
 */
function safe_init_file($file, $default = []) {
    if (!file_exists($file)) {
        // إذا لم يكن الملف موجودًا، قم بإنشائه بالمحتوى الافتراضي
        if (file_put_contents($file, json_encode($default, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE)) === false) {
            error_log("Failed to create file: " . $file);
        }
    } else {
        $content = file_get_contents($file);
        // التحقق من صحة JSON، وإعادة تهيئة الملف إذا كان تالفًا
        json_decode($content);
        if (json_last_error() !== JSON_ERROR_NONE) {
            error_log("Corrupted JSON file detected: " . $file . ". Re-initializing.");
            if (file_put_contents($file, json_encode($default, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE)) === false) {
                error_log("Failed to re-initialize corrupted file: " . $file);
            }
        }
    }
}
 // ملف القنوات الإجبارية

// تهيئة الملفات والمجلدات
if (!file_exists(STEPS_DIR)) {
    if (!mkdir(STEPS_DIR, 0755, true)) { // 0755 هي الأذونات الشائعة
        error_log("Failed to create directory: " . STEPS_DIR);
    }
}
if (!file_exists(BASE_DIR . "data_trans")) {
    if (!mkdir(BASE_DIR . "data_trans", 0755, true)) { // 0755 هي الأذونات الشائعة
        error_log("Failed to create directory: " . BASE_DIR . "data_trans");
    }
}

safe_init_file(BALANCES_FILE, []);
safe_init_file(USERS_FILE, []);
safe_init_file(BANNED_FILE, []);
// التأكد من وجود ملف الأدمن وإضافة الأدمن الأساسي إذا لم يكن موجودًا
if (!file_exists(ADMINS_FILE)) {
    if (file_put_contents(ADMINS_FILE, json_encode([$admin_id], JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE)) === false) {
        error_log("Failed to create ADMINS_FILE.");
    }
}
safe_init_file(FORCED_CHANNELS_FILE, []);
// تهيئة ملف الأسعار إذا لم يكن موجودًا
if (!file_exists(PRICES_FILE)) {
    $default_prices = [
        "💎 110" => 8700, "محذوف" => 17000, "💎 330" => 25000,
        "💎 530" => 39000, "محذوف" => 51000, "💎 1080" => 74000,
        "محذوف" => 99000, "💎 2180" => 145000, "محذوف" => 235000,
        "محذوف" => 460000,
        "العضوية الأسبوعية" => 9000, "العضوية الشهرية" => 25000,
        "UC 60" => 8500, "UC 325" => 25000, "UC 660" => 45000,
        "UC 1800" => 120000, "UC 3850" => 235000, "UC 8100" => 460000
    ];
    if (file_put_contents(PRICES_FILE, json_encode($default_prices, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE)) === false) {
        error_log("Failed to create PRICES_FILE.");
    }
}
// تهيئة ملف الكاش إذا لم يكن موجودًا
if (!file_exists(CASH_FILE)) {
    if (file_put_contents(CASH_FILE, "81506166") === false) {
        error_log("Failed to create CASH_FILE.");
    }
}

// تحميل البيانات مع معالجة الأخطاء
// استخدام safe_init_file يضمن أن الملفات موجودة وصالحة
$balances = json_decode(file_get_contents(BALANCES_FILE), true);
if (!is_array($balances)) {
    $balances = [];
    error_log("Balances file corrupted after load. Resetting to empty array.");
}

$prices = json_decode(file_get_contents(PRICES_FILE), true);
if (!is_array($prices)) {
    $prices = [];
    error_log("Prices file corrupted after load. Resetting to empty array.");
}

$users = json_decode(file_get_contents(USERS_FILE), true);
if (!is_array($users)) {
    $users = [];
    error_log("Users file corrupted after load. Resetting to empty array.");
}

$banned = json_decode(file_get_contents(BANNED_FILE), true);
if (!is_array($banned)) {
    $banned = [];
    error_log("Banned file corrupted after load. Resetting to empty array.");
}

$admins = json_decode(file_get_contents(ADMINS_FILE), true);
if (!is_array($admins)) {
    $admins = [];
    error_log("Admins file corrupted after load. Resetting to empty array.");
}

$forced_channels = json_decode(file_get_contents(FORCED_CHANNELS_FILE), true);
if (!is_array($forced_channels)) {
    $forced_channels = [];
    error_log("Forced channels file corrupted after load. Resetting to empty array.");
}

// استقبال التحديث من Telegram
$update = json_decode(file_get_contents("php://input"), true);
// التحقق مما إذا كان هناك تحديث لتجنب الأخطاء
if (empty($update)) {
    // لا يوجد تحديث، قد يكون هذا طلب HTTP عادي وليس من Telegram
    // يمكنك تسجيل الخطأ هنا أو عدم فعل شيء
    exit();
}

$message = $update["message"] ?? null;
$callback = $update["callback_query"] ?? null;
$data = $callback["data"] ?? null;
$text = $message["text"] ?? null;
$cid = $message["chat"]["id"] ?? $callback["message"]["chat"]["id"] ?? null;
$uid = $message["from"]["id"] ?? $callback["from"]["id"] ?? null;
// --- الدوال المساعدة (بدون تغيير في منطقها الداخلي) ---

// دالة التحقق من الأدمن الأساسي
function isMainAdmin($user_id) {
    global $main_admin;
    return $user_id == $main_admin;
}

// دالة التحقق من الاشتراك في القنوات الإجبارية
function checkChannelsSubscription($user_id) {
    global $forced_channels, $token;
    if (empty($forced_channels)) return true;
    
    foreach ($forced_channels as $channel) {
        $channel_id = str_replace('@', '', $channel['username']);
        $result = json_decode(file_get_contents("https://api.telegram.org/bot$token/getChatMember?chat_id=@$channel_id&user_id=$user_id"), true);
        
        if (!isset($result['result']['status']) || $result['result']['status'] == 'left' || $result['result']['status'] == 'kicked') {
            return false;
        }
    }
    return true;
}

// دالة إحصاءات البوت
function getBotStatistics() {
    global $users, $balances, $banned, $admins, $forced_channels;
    
    $total_users = count($users);
    $total_banned = count($banned);
    $total_admins = count($admins);
    $total_channels = count($forced_channels);
    
    $total_balance = 0;
    foreach ($balances as $user) {
        $total_balance += $user['balance'] ?? 0;
    }
    
    return [
        'users' => $total_users,
        'banned' => $total_banned,
        'admins' => $total_admins,
        'channels' => $total_channels,
        'balance' => $total_balance
    ];
}

function send($id, $text, $inline = false, $keys = null) {
    global $token;
    $d = ["chat_id" => $id, "text" => $text, "parse_mode" => "Markdown"];
    if ($keys) {
        $markup = $inline ?
        ["inline_keyboard" => $keys] : ["keyboard" => $keys, "resize_keyboard" => true];
        $d["reply_markup"] = json_encode($markup);
    }
    $result = file_get_contents("https://api.telegram.org/bot$token/sendMessage?" . http_build_query($d));
    if ($result === FALSE) {
        error_log("Failed to send message to $id");
    }
}

function answer($cid, $text) {
    global $token;
    $result = file_get_contents("https://api.telegram.org/bot$token/answerCallbackQuery?callback_query_id=$cid&text=" . urlencode($text));
    if ($result === FALSE) {
        error_log("Failed to answer callback $cid");
    }
}

function deleteMessage($chat_id, $message_id) {
    global $token;
    $result = file_get_contents("https://api.telegram.org/bot$token/deleteMessage?chat_id=$chat_id&message_id=$message_id");
    if ($result === FALSE) {
        error_log("Failed to delete message $message_id");
    }
}

function saveStep($uid, $step) { 
    // استخدام المسار المطلق
    if (!@file_put_contents(STEPS_DIR . $uid, $step)) {
        error_log("Failed to save step for $uid to " . STEPS_DIR . $uid);
    }
}
function getStep($uid) { 
    // استخدام المسار المطلق
    return file_exists(STEPS_DIR . $uid) ?
    file_get_contents(STEPS_DIR . $uid) : null;
}
function delStep($uid) { 
    // استخدام المسار المطلق
    if (file_exists(STEPS_DIR . $uid)) {
        if (!@unlink(STEPS_DIR . $uid)) {
            error_log("Failed to delete step for $uid from " . STEPS_DIR . $uid);
        }
    }
}

// ----------------------------------------------------
// بداية الدالة الجديدة لمعالجة منطق التحديثات
function handle_update_logic($input_text, $input_data, $input_cid, $input_uid, $input_callback = null) {
    // جلب المتغيرات العامة التي تحتاجها الدالة
    global $token, $admin_id, $bot_status, $main_admin;
    global $balances, $prices, $users, $banned, $admins, $forced_channels;
    
    // جلب الثوابت المتعلقة بالملفات
    global $BALANCES_FILE, $STEPS_DIR, $PRICES_FILE, $CASH_FILE, $USERS_FILE, $BANNED_FILE, $ADMINS_FILE, $FORCED_CHANNELS_FILE;
    // إعادة تعريف المتغيرات المحلية لتكون مثل المتغيرات العامة التي كان الكود يعتمد عليها
    $text = $input_text;
    $data = $input_data;
    $cid = $input_cid;
    $uid = $input_uid;
    $callback = $input_callback;
    // التحقق من حالة البوت
    if ($bot_status == 'off' && !in_array($uid, $admins)) {
        if ($text == '/start') {
            // السماح ببدء المحادثة حتى لو كان البوت متوقفاً
        } else {
            send($cid, "⚠️ البوت متوقف حاليًا للصيانة. سنعود قريبًا!", false, [
                [["text" => "🔄 تحديث", "callback_data" => "check_bot_status"]]
            ]);
            return;
        }
    }

    // التحقق من المستخدم المحظور
    if (in_array($uid, $banned)) {
        send($cid, "🚫 تم حظرك من استخدام البوت. للاستفسار راسل الدعم.");
        return; 
    }

    // التحقق من الاشتراك في القنوات الإجبارية عند /start
    if ($text == "/start" && !in_array($uid, $admins)) {
        if (!checkChannelsSubscription($uid)) {
            $channels_list = "";
            $buttons = [];
            foreach ($forced_channels as $channel) {
                $channels_list .= "- @{$channel['username']}\n";
                $buttons[] = [["text" => "انضمام إلى @{$channel['username']}", "url" => "https://t.me/{$channel['username']}"]];
            }
            
            $buttons[] = [["text" => "✅ تحقق من الاشتراك", "callback_data" => "check_subscription"]];
            send($cid, "📢 يرجى الاشتراك في القنوات التالية لاستخدام البوت:\n$channels_list", true, $buttons);
            return;
        }
    }

    // معالجة التحقق من الاشتراك
    if ($data == "check_subscription") {
        if (checkChannelsSubscription($uid)) {
            answer($callback["id"], "✅ تم التحقق من اشتراكك في جميع القنوات");
            deleteMessage($callback["message"]["chat"]["id"], $callback["message"]["message_id"]);
            // إعادة إرسال رسالة /start باستخدام الدالة
            handle_update_logic("/start", null, $cid, $uid);
            return;
        } else {
            answer($callback["id"], "❌ لم تشترك في جميع القنوات المطلوبة");
        }
    }

    // معالجة التحقق من حالة البوت
    if ($data == "check_bot_status") {
        if ($bot_status == 'on') {
            answer($callback["id"], "✅ البوت يعمل الآن");
            deleteMessage($callback["message"]["chat"]["id"], $callback["message"]["message_id"]);
            handle_update_logic("/start", null, $cid, $uid);
            return;
        } else {
            answer($callback["id"], "⚠️ البوت لا يزال متوقفًا");
        }
    }

    // إنشاء سجل للمستخدم الجديد مع التحقق من الصلاحيات
    if (!isset($balances[$uid])) {
        $balances[$uid] = ["balance" => 0, "spend" => 0];
        // استخدام JSON_PRETTY_PRINT و JSON_UNESCAPED_UNICODE للحفظ
        if (!@file_put_contents(BALANCES_FILE, json_encode($balances, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE))) {
            error_log("Failed to write balances file: " . BALANCES_FILE);
        }
    }
    if (!in_array($uid, $users)) {
        $users[] = $uid;
        // استخدام JSON_PRETTY_PRINT و JSON_UNESCAPED_UNICODE للحفظ
        if (!@file_put_contents(USERS_FILE, json_encode($users, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE))) {
            error_log("Failed to write users file: " . USERS_FILE);
        }
    }

    // بدء البوت مع زر التشغيل/الإيقاف
    if ($text == "/start") {
        if ($bot_status == 'off' && !in_array($uid, $admins)) {
            send($cid, "⚠️ البوت متوقف حاليًا للصيانة. سنعود قريبًا!", false, [
                [["text" => "🔄 تحديث", "callback_data" => "check_bot_status"]]
            ]);
            return; 
        }
        
        $start_buttons = [
            [["text" => "FREE FIRE 💎"], ["text" => "PUBG ⚜️"]],
            [["text" => "شحن رصيدي 💸"], ["text" => "معلومات الحساب 👤"]],
            [["text" => "🚨 المساعدة والدعم 🚨"]]
            
            ];
        if (in_array($uid, $admins)) {
            $start_buttons[] = [["text" => "/admin"]];
            $start_buttons[] = [["text" => "📊 إحصائيات البوت"]];
            // عرض زر التشغيل/الإيقاف حسب الحالة الحالية للبوت
            if ($bot_status == 'on') {
                $start_buttons[] = [["text" => "⏹️ إيقاف البوت"]];
            } else {
                $start_buttons[] = [["text" => "▶️ تشغيل البوت"]];
            }
        }
        
        send($cid, "♕     اخـتـر مـن أحـد الأوامـر الـتـالـيـة     ♕ :", false, $start_buttons);
    }

    // التحقق من صلاحيات الأدمن عند استخدام أمر /admin
    if ($text == "/admin") {
        if (!in_array($uid, $admins)) {
            send($cid, "عذراً، هذا الأمر متاح فقط للإدمن.");
            // لا نستخدم exit هنا، نكتفي بالرسالة والعودة
            return;
        }
        
        $admin_buttons = [
            [["text" => "➕ إضافة رصيد"], ["text" => "➖ خصم رصيد"]],
            [["text" => "💵 تعديل الأسعار"], ["text" => "🔁 تغيير رقم الكاش"]],
            [["text" => "📢 إرسال إذاعة"], ["text" => "🚫 حظر مستخدم"]],
            [["text" => "✅ فك حظر مستخدم"]]
        ];
        
        if (isMainAdmin($uid)) {
            $admin_buttons[] = [["text" => "👨‍💼 إضافة أدمن"], ["text" => "👨‍💼 حذف أدمن"]];
            $admin_buttons[] = [["text" => "📢 إدارة الاشتراك الإجباري"]];
        }
        
        $admin_buttons[] = [["text" => "📊 إحصائيات البوت"]];
        // عرض زر التشغيل/الإيقاف حسب الحالة الحالية للبوت
        if ($bot_status == 'on') {
            $admin_buttons[] = [["text" => "⏹️ إيقاف البوت"]];
        } else {
            $admin_buttons[] = [["text" => "▶️ تشغيل البوت"]];
        }
        
        send($cid, " اهـــلا بـــك ايــهـا الادمــن ", false, $admin_buttons);
    }

    // الأوامر العامة
    if ($text == "🚨 المساعدة والدعم 🚨") {
        send($cid, " 
اهـلا وسـهـلا تـفـضـل اطـرح الـمـشـكـلـه الـتـي تـواجـهـك 🌔 : 
  \n@BotHostTGS"); // تم تعديل هذا السطر بناءً على طلب المستخدم
    }

    if ($text == "معلومات الحساب 👤") {
        // بما أن safe_init_file و check for !isset($balances[$uid]) تتم في بداية handle_update_logic،
        // فليس هناك حاجة لتكرارها هنا.
        // if (!isset($balances[$uid])) {
        //     $balances[$uid] = ["balance" => 0, "spend" => 0];
        //     file_put_contents(BALANCES_FILE, json_encode($balances));
        // }

        // MODIFICATION START: Correctly get user's first and last name from global message/callback
        global $message, $callback; // Declare global variables within the function

        $source_obj = null;
        if ($callback) {
            $source_obj = $callback;
        } elseif ($message) {
            $source_obj = $message;
        }

        $first_name = $source_obj['from']['first_name'] ?? "مستخدم";
        $last_name = $source_obj['from']['last_name'] ?? "";
        $full_name = trim("$first_name $last_name");
        // MODIFICATION END
        
        $balance = $balances[$uid]["balance"] ?? 0;
        $spend = $balances[$uid]["spend"] ?? 0;

        $info_message = "👤 *معلومات الحساب* 👤\n";
        $info_message .= "🔆 *الاسم:* [$full_name](tg://user?id=$uid)\n";
        $info_message .= "🔆 *ايدي حسابك:* `$uid`";
        $info_message .= "\n";
        $info_message .= "💸 `".number_format($balance)."` رصيدك بـ اليرة السورية\n";
        $info_message .= "💸  ليرة سورية`".number_format($spend)."` إجمالي المصروفات\n";
        $info_message .= "";
        $buttons = [
            [["text" => "  شكرا لاستخدامك بوتنا", "callback_data" => "refresh_info"]],
        ];
        send($cid, $info_message, true);
    }

    // قسم الألعاب
    
    
// استبدال قسم الألعاب بالكود التالي:
    if ($text == "FREE FIRE 💎") {
    $keys = [
        [["text" => "FREEFIRE تلقائي", "callback_data" => "show_categories:FF:manual"]]
    ];
    send($cid, "🎮 اللعبة FREE FIRE  

🔆 اخـتـر طـريـقـة الـشـحـن الـمـنـاسـب :", true, $keys);
}

if ($text == "PUBG ⚜️") {
    $keys = [
        [["text" => "PUBG تلقائي", "callback_data" => "show_categories:PUBG:manual"]]
    ];
    send($cid, "🎮 اللعبة PUBG

🔆 اخـتـر طـريـقـة الـشـحـن الـمـنـاسـبة :", true, $keys);
}

// إضافة هذا الكود في قسم معالجة الكال باك:
if (strpos($data, "show_categories:") === 0) {
    list(, $game, $type) = explode(":", $data);
    $keys = [];
    foreach ($prices as $name => $price) {
        if (($game == "FF" && (strpos($name, "💎") !== false || strpos($name, "Membership") !== false && $name != "محذوف")) ||
            ($game == "PUBG" && strpos($name, "UC") !== false && $name != "محذوف")) {
            $keys[] = [["text" => "$name", "callback_data" => "show_details:$game:$name"]];
        }
    }
    
    send($cid, "$game تلقائي 
اختر حزمة :", true, $keys);
    answer($callback["id"], "تم عرض الفئات");
}
 
    // شحن الرصيد بالتعديلات المطلوبة
    if ($text == "شحن رصيدي 💸") {
        // استخدام المسار المطلق عند قراءة CASH_FILE
        $cash_number = file_get_contents(CASH_FILE);
        $payment_button = [[
            ["text" => "syriatel cash ( تلقائي )", 
             "callback_data" => "show_cash_number"]
        ]];
        send($cid, "اختر طريقة الإيداع المناسبة :", true, $payment_button);
    }

    // معالجة الكال باك
    if ($data) {
        // عرض رقم الكاش عند الضغط على زر الدفع
        if ($data == "show_cash_number") {
            // استخدام المسار المطلق عند قراءة CASH_FILE
            $cash_number = file_get_contents(CASH_FILE);
            $copyable_code = "`$cash_number`";
            
            send($cid, "*syriatel cash ( تلقائي )*".
                       "قم بتحويل المبلغ المراد إيداعه إلى إحدى الأكواد التالية 📲 :
❗أقل مبلغ تحويل 10000 ل.س
(تحويل يدوي حصرا)
الصورة من تطبيق أقرب اليك او رسالة من الشركة تم تحويل مبلغ ✅
رصيد عادي مرفوض❌
رصيد من محل تعبئة مبلغ مرفوض❌
رصيد من الشركة مباشر مرفوض❌
\n\n".
                       
                           "$copyable_code\n\n".
                       
                       "علماً أنَّ:

ان اقل عمليه تحويل هي 10.000 ل.س

    --------------------------


الان دخل رقم عملية التحويل 📨:", false);
            saveStep($uid, "wait_trans_id");
            answer($callback["id"], "تم عرض رقم الكاش");
        }
        
        // معالجة اختيار الفئة
        if (strpos($data, "show_details:") === 0) {
            list(, $game, $pack) = explode(":", $data);
            $price = $prices[$pack];
            $price_usd = number_format($price / 15000, 2);
            
            deleteMessage($callback["message"]["chat"]["id"], $callback["message"]["message_id"]);
            
            send($cid, "♕ تفاصيل الحزمة ♕:

♪ اللعبة: $game  
♪ الفئة: $pack
♪ السعر: $price ل.س 

اختر طريقة الشحن 👇👇:", true, [
                [["text" => "عن طريق الـID", "callback_data" => "enter_id:$game:$pack"]],
            ]);
            answer($callback["id"], "تم عرض التفاصيل");
        }
        
        // معالجة إدخال ID
        elseif (strpos($data, "enter_id:") === 0) {
            list(, $game, $pack) = expl
